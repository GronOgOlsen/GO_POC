user nginx;

events {
    worker_connections 1024;
}

http {
    # Definer upstreams til vores microservices
    upstream auth_backend {
        server authservice:8080; # Load balancer for AuthService
    }

    upstream user_backend {
        server userservice:8080; # Load balancer for UserService
    }

    upstream catalog_backend {
        server catalogservice:8080; # Load balancer for CatalogService
    }

    upstream auction_backend {
        server auctionservice:8080; # Load balancer for AuctionService
    }

    upstream bidding_backend {
        server biddingservice:8080; # Load balancer for BiddingService
    }

    # Konfigurer server til at lytte p√• port 4000
    server {
        listen 4000;

        # AuthService routing
        location /api/auth/ {
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # UserService routing
        location /api/user/ {
            proxy_pass http://user_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # CatalogService routing
        location /api/catalog/ {
            proxy_pass http://catalog_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # AuctionService routing
        location /api/auction/ {
            proxy_pass http://auction_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # BiddingService routing
        location /api/bidding/ {
            proxy_pass http://bidding_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Fallback route
        location / {
            return 404 "Service not found";
        }
    }
}
